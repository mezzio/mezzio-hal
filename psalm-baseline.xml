<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.26.1@d747f6500b38ac4f7dfc5edbcae6e4b637d7add0">
  <file src="src/Exception/InvalidObjectException.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[forNonObject]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/HalResource.php">
    <MissingClosureParamType>
      <code><![CDATA[$key]]></code>
      <code><![CDATA[$links]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$rel]]></code>
      <code><![CDATA[$resource]]></code>
      <code><![CDATA[$value]]></code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code><![CDATA[function ($item) {]]></code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code><![CDATA[$links]]></code>
      <code><![CDATA[$links]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$relation]]></code>
      <code><![CDATA[$relation]]></code>
      <code><![CDATA[$relation]]></code>
      <code><![CDATA[$relation]]></code>
      <code><![CDATA[$resource]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$resource]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAssignment>
      <code><![CDATA[$relation[Link::AS_COLLECTION]]]></code>
      <code><![CDATA[$relation[]]]></code>
    </MixedArrayAssignment>
    <MixedArrayOffset>
      <code><![CDATA[$byRelation[$rel]]]></code>
      <code><![CDATA[$byRelation[$rel]]]></code>
      <code><![CDATA[$relations[$key]]]></code>
      <code><![CDATA[$relations[$key]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code><![CDATA[$relations[$key]]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[toArray]]></code>
    </MixedMethodCall>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$this->embedded]]></code>
      <code><![CDATA[$this->embedded]]></code>
      <code><![CDATA[$this->embedded]]></code>
    </MixedPropertyTypeCoercion>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$forceCollection ? [$resource] : $resource]]></code>
      <code><![CDATA[$this->aggregateEmbeddedCollection($name, $resource, $context)]]></code>
      <code><![CDATA[HalResource|HalResource[]]]></code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="src/HalResponseFactory.php">
    <MixedArgument>
      <code><![CDATA[$matchedType->getValue()]]></code>
    </MixedArgument>
    <UndefinedInterfaceMethod>
      <code><![CDATA[getValue]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/HalResponseFactoryFactory.php">
    <MixedArgument>
      <code><![CDATA[$jsonRenderer]]></code>
      <code><![CDATA[$xmlRenderer]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$jsonRenderer]]></code>
      <code><![CDATA[$xmlRenderer]]></code>
    </MixedAssignment>
    <UndefinedDocblockClass>
      <code><![CDATA[RuntimeException]]></code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/Link.php">
    <InvalidCast>
      <code><![CDATA[$uri]]></code>
    </InvalidCast>
    <MixedArgument>
      <code><![CDATA[is_object($rel) ? $rel::class : gettype($rel)]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[string|string[]]]></code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[is_string($relation) ? [$relation] : $relation]]></code>
      <code><![CDATA[is_string($relation) ? [$relation] : $relation]]></code>
    </MixedReturnStatement>
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$this->validateRelation($relation)]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
    <RedundantCondition>
      <code><![CDATA[gettype($rel)]]></code>
      <code><![CDATA[is_object($href)]]></code>
      <code><![CDATA[is_string($uri)]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA[! is_string($attribute)]]></code>
      <code><![CDATA[! is_string($attribute) || empty($attribute)]]></code>
      <code><![CDATA[! is_string($rel)]]></code>
      <code><![CDATA[! is_string($rel)]]></code>
      <code><![CDATA[! is_string($rel) || empty($rel)]]></code>
      <code><![CDATA[! is_string($rel) || empty($rel)]]></code>
      <code><![CDATA[(string) $uri]]></code>
      <code><![CDATA[gettype($href)]]></code>
      <code><![CDATA[is_object($href)]]></code>
      <code><![CDATA[is_object($rel)]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/LinkCollection.php">
    <LessSpecificImplementedReturnType>
      <code><![CDATA[self]]></code>
      <code><![CDATA[self]]></code>
    </LessSpecificImplementedReturnType>
    <MissingParamType>
      <code><![CDATA[$rel]]></code>
    </MissingParamType>
  </file>
  <file src="src/LinkGenerator/MezzioUrlGenerator.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$routeName]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/LinkGenerator/MezzioUrlGeneratorFactory.php">
    <MixedArgument>
      <code><![CDATA[$container->get($this->urlHelperServiceName)]]></code>
      <code><![CDATA[$container->has(ServerUrlHelper::class)
                ? $container->get(ServerUrlHelper::class)
                : ($container->has(\Zend\Expressive\Helper\ServerUrlHelper::class)
                    ? $container->get(\Zend\Expressive\Helper\ServerUrlHelper::class)
                    : null)]]></code>
      <code><![CDATA[$data['urlHelperServiceName'] ?? UrlHelper::class]]></code>
    </MixedArgument>
  </file>
  <file src="src/LinkGeneratorFactory.php">
    <MixedArgument>
      <code><![CDATA[$container->get($this->urlGeneratorServiceName)]]></code>
      <code><![CDATA[$data['urlGeneratorServiceName'] ?? LinkGenerator\UrlGeneratorInterface::class]]></code>
    </MixedArgument>
  </file>
  <file src="src/Metadata/AbstractMetadata.php">
    <MissingConstructor>
      <code><![CDATA[$class]]></code>
    </MissingConstructor>
  </file>
  <file src="src/Metadata/Exception/InvalidConfigException.php">
    <MixedAssignment>
      <code><![CDATA[$className]]></code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code><![CDATA[dueToConflictingRouteIdentifierPlaceholder]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Metadata/MetadataMapFactory.php">
    <InvalidStringClass>
      <code><![CDATA[new $factoryClass()]]></code>
    </InvalidStringClass>
    <MixedArgument>
      <code><![CDATA[$metadataFactories]]></code>
      <code><![CDATA[$metadataFactories[$metadataClass]]]></code>
      <code><![CDATA[$metadata['__class__']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$config['mezzio-hal']]]></code>
      <code><![CDATA[$config['mezzio-hal']['metadata-factories']]]></code>
      <code><![CDATA[$config[MetadataMap::class]]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$config]]></code>
      <code><![CDATA[$metadataFactories]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code><![CDATA[AbstractMetadata]]></code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->$method($metadata)]]></code>
    </MixedReturnStatement>
  </file>
  <file src="src/Metadata/RouteBasedCollectionMetadata.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[setQueryStringArguments]]></code>
      <code><![CDATA[setRouteParams]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Metadata/RouteBasedCollectionMetadataFactory.php">
    <InvalidStringClass>
      <code><![CDATA[new $requestedName(
            $metadata['collection_class'],
            $metadata['collection_relation'],
            $metadata['route'],
            $metadata['pagination_param'] ?? 'page',
            $metadata['pagination_param_type'] ?? RouteBasedCollectionMetadata::TYPE_QUERY,
            $metadata['route_params'] ?? [],
            $metadata['query_string_arguments'] ?? []
        )]]></code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code><![CDATA[new $requestedName(
            $metadata['collection_class'],
            $metadata['collection_relation'],
            $metadata['route'],
            $metadata['pagination_param'] ?? 'page',
            $metadata['pagination_param_type'] ?? RouteBasedCollectionMetadata::TYPE_QUERY,
            $metadata['route_params'] ?? [],
            $metadata['query_string_arguments'] ?? []
        )]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[AbstractMetadata]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Metadata/RouteBasedResourceMetadata.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[setRouteParams]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Metadata/RouteBasedResourceMetadataFactory.php">
    <InvalidStringClass>
      <code><![CDATA[new $requestedName(
            $metadata['resource_class'],
            $metadata['route'],
            $metadata['extractor'],
            $metadata['resource_identifier'] ?? 'id',
            $metadata['route_params'] ?? [],
            $metadata['identifiers_to_placeholders_mapping'] ?? ['id' => 'id'],
            $metadata['max_depth'] ?? 10
        )]]></code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code><![CDATA[new $requestedName(
            $metadata['resource_class'],
            $metadata['route'],
            $metadata['extractor'],
            $metadata['resource_identifier'] ?? 'id',
            $metadata['route_params'] ?? [],
            $metadata['identifiers_to_placeholders_mapping'] ?? ['id' => 'id'],
            $metadata['max_depth'] ?? 10
        )]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[AbstractMetadata]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Metadata/UrlBasedCollectionMetadataFactory.php">
    <InvalidStringClass>
      <code><![CDATA[new $requestedName(
            $metadata['collection_class'],
            $metadata['collection_relation'],
            $metadata['url'],
            $metadata['pagination_param'] ?? 'page',
            $metadata['pagination_param_type'] ?? UrlBasedCollectionMetadata::TYPE_QUERY
        )]]></code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code><![CDATA[new $requestedName(
            $metadata['collection_class'],
            $metadata['collection_relation'],
            $metadata['url'],
            $metadata['pagination_param'] ?? 'page',
            $metadata['pagination_param_type'] ?? UrlBasedCollectionMetadata::TYPE_QUERY
        )]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[AbstractMetadata]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Metadata/UrlBasedResourceMetadataFactory.php">
    <InvalidStringClass>
      <code><![CDATA[new $requestedName(
            $metadata['resource_class'],
            $metadata['url'],
            $metadata['extractor'],
            $metadata['max_depth'] ?? 10
        )]]></code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code><![CDATA[new $requestedName(
            $metadata['resource_class'],
            $metadata['url'],
            $metadata['extractor'],
            $metadata['max_depth'] ?? 10
        )]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[AbstractMetadata]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Renderer/XmlRenderer.php">
    <InvalidReturnStatement>
      <code><![CDATA[$elements]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[DOMNode|false|list<DOMNode|false|list<DOMNode|array<array-key, DOMNode>>>]]></code>
    </InvalidReturnType>
    <MixedArgument>
      <code><![CDATA[$attribute]]></code>
      <code><![CDATA[$childDatum]]></code>
      <code><![CDATA[$linkDatum]]></code>
      <code><![CDATA[$resource['_links']['self']['href']]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$key]]></code>
      <code><![CDATA[$key]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$resource['_links']['self']['href']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$attribute]]></code>
      <code><![CDATA[$child]]></code>
      <code><![CDATA[$childDatum]]></code>
      <code><![CDATA[$data]]></code>
      <code><![CDATA[$linkDatum]]></code>
      <code><![CDATA[$resource['_embedded']]]></code>
      <code><![CDATA[$resource['_links']]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MixedAssignment>
    <PossibleRawObjectIteration>
      <code><![CDATA[$resource['_links']]]></code>
    </PossibleRawObjectIteration>
    <PossiblyFalseArgument>
      <code><![CDATA[$element]]></code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument>
      <code><![CDATA[$child]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/ResourceGenerator/ExtractCollectionTrait.php">
    <MethodSignatureMismatch>
      <code><![CDATA[abstract protected function generateSelfLink(
        AbstractCollectionMetadata $metadata,
        ResourceGeneratorInterface $resourceGenerator,
        ServerRequestInterface $request
    ): Link;]]></code>
      <code><![CDATA[abstract protected function generateSelfLink(
        AbstractCollectionMetadata $metadata,
        ResourceGeneratorInterface $resourceGenerator,
        ServerRequestInterface $request
    ): Link;]]></code>
    </MethodSignatureMismatch>
    <MixedArgument>
      <code><![CDATA[$item]]></code>
      <code><![CDATA[$item]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$links]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$count]]></code>
      <code><![CDATA[$count]]></code>
      <code><![CDATA[$item]]></code>
      <code><![CDATA[$item]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$count]]></code>
    </MixedOperand>
    <PossiblyNullOperand>
      <code><![CDATA[$perPage]]></code>
      <code><![CDATA[$perPage]]></code>
    </PossiblyNullOperand>
    <UndefinedInterfaceMethod>
      <code><![CDATA[count]]></code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/ResourceGenerator/ExtractInstanceTrait.php">
    <MixedArgument>
      <code><![CDATA[$metadata->getExtractor()]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$array[$key]]]></code>
      <code><![CDATA[$childData]]></code>
    </MixedAssignment>
    <UndefinedMethod>
      <code><![CDATA[getExtractor]]></code>
    </UndefinedMethod>
  </file>
  <file src="src/ResourceGenerator/RouteBasedCollectionStrategy.php">
    <MethodSignatureMismatch>
      <code><![CDATA[protected function generateSelfLink(]]></code>
    </MethodSignatureMismatch>
    <MixedArgument>
      <code><![CDATA[$metadata->getQueryStringArguments()]]></code>
      <code><![CDATA[$metadata->getQueryStringArguments()]]></code>
      <code><![CDATA[$metadata->getRoute()]]></code>
      <code><![CDATA[$metadata->getRouteParams()]]></code>
      <code><![CDATA[$route]]></code>
      <code><![CDATA[$routeParams]]></code>
      <code><![CDATA[$routeParams]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$queryParams]]></code>
      <code><![CDATA[array_merge($request->getQueryParams(), $metadata->getQueryStringArguments())]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$route]]></code>
      <code><![CDATA[$routeParams]]></code>
      <code><![CDATA[$routeParams]]></code>
    </MixedAssignment>
    <UndefinedMethod>
      <code><![CDATA[getQueryStringArguments]]></code>
      <code><![CDATA[getQueryStringArguments]]></code>
      <code><![CDATA[getRoute]]></code>
      <code><![CDATA[getRoute]]></code>
      <code><![CDATA[getRouteParams]]></code>
      <code><![CDATA[getRouteParams]]></code>
    </UndefinedMethod>
  </file>
  <file src="src/ResourceGenerator/RouteBasedResourceStrategy.php">
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$routeParams]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayOffset>
      <code><![CDATA[$routeParams[$placeholderMap[$key]]]]></code>
    </MixedArrayOffset>
  </file>
  <file src="src/ResourceGenerator/UrlBasedCollectionStrategy.php">
    <MethodSignatureMismatch>
      <code><![CDATA[protected function generateSelfLink(]]></code>
    </MethodSignatureMismatch>
    <MixedArgument>
      <code><![CDATA[$url]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$url]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$url]]></code>
    </MixedOperand>
    <UndefinedMethod>
      <code><![CDATA[getUrl]]></code>
      <code><![CDATA[getUrl]]></code>
    </UndefinedMethod>
  </file>
  <file src="src/ResourceGeneratorFactory.php">
    <MissingDependency>
      <code><![CDATA[HydratorPluginManager]]></code>
    </MissingDependency>
    <MixedArgument>
      <code><![CDATA[$container->get($strategy)]]></code>
      <code><![CDATA[$container->get($this->linkGeneratorServiceName)]]></code>
      <code><![CDATA[$container->get(HydratorPluginManager::class)]]></code>
      <code><![CDATA[$container->get(Metadata\MetadataMap::class)]]></code>
      <code><![CDATA[$data['linkGeneratorServiceName'] ?? LinkGenerator::class]]></code>
      <code><![CDATA[$strategy]]></code>
      <code><![CDATA[HydratorPluginManager::class]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$config['mezzio-hal']['resource-generator']]]></code>
      <code><![CDATA[$config['mezzio-hal']['resource-generator']['strategies']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code><![CDATA[$strategy]]></code>
    </MixedAssignment>
  </file>
  <file src="test/Assertions.php">
    <DeprecatedClass>
      <code><![CDATA[ObjectProperty::class]]></code>
    </DeprecatedClass>
    <MixedArgument>
      <code><![CDATA[$actual->getHref()]]></code>
      <code><![CDATA[$actual->getRels()]]></code>
    </MixedArgument>
    <MixedMethodCall>
      <code><![CDATA[getHref]]></code>
      <code><![CDATA[getHref]]></code>
      <code><![CDATA[getRels]]></code>
      <code><![CDATA[getRels]]></code>
    </MixedMethodCall>
    <MoreSpecificReturnType>
      <code><![CDATA[Link]]></code>
    </MoreSpecificReturnType>
    <RedundantCondition>
      <code><![CDATA[assertIsArray]]></code>
    </RedundantCondition>
  </file>
  <file src="test/ConfigProviderTest.php">
    <RedundantCondition>
      <code><![CDATA[assertIsArray]]></code>
    </RedundantCondition>
  </file>
  <file src="test/HalResourceTest.php">
    <InvalidArgument>
      <code><![CDATA[$links]]></code>
      <code><![CDATA[['foo' => $embedded]]]></code>
      <code><![CDATA[['foo' => 'bar']]]></code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$representation['_embedded']]]></code>
      <code><![CDATA[$representation['_embedded']]]></code>
      <code><![CDATA[$representation['_embedded']]]></code>
      <code><![CDATA[$representation['_embedded']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$representation['_embedded']['foo']]]></code>
      <code><![CDATA[$representation['_embedded']['foo']]]></code>
      <code><![CDATA[$representation['_embedded']['foo']]]></code>
      <code><![CDATA[$representation['_embedded']['foo']]]></code>
    </MixedArrayAccess>
  </file>
  <file src="test/HalResponseFactoryFactoryTest.php">
    <DeprecatedMethod>
      <code><![CDATA[self::assertAttributeInstanceOf(Renderer\JsonRenderer::class, 'jsonRenderer', $instance)]]></code>
      <code><![CDATA[self::assertAttributeInstanceOf(Renderer\XmlRenderer::class, 'xmlRenderer', $instance)]]></code>
      <code><![CDATA[self::assertAttributeSame($jsonRenderer, 'jsonRenderer', $instance)]]></code>
      <code><![CDATA[self::assertAttributeSame($jsonRenderer, 'jsonRenderer', $instance)]]></code>
      <code><![CDATA[self::assertAttributeSame($xmlRenderer, 'xmlRenderer', $instance)]]></code>
      <code><![CDATA[self::assertAttributeSame($xmlRenderer, 'xmlRenderer', $instance)]]></code>
    </DeprecatedMethod>
    <UndefinedClass>
      <code><![CDATA[StreamInterface]]></code>
      <code><![CDATA[StreamInterface]]></code>
    </UndefinedClass>
  </file>
  <file src="test/InMemoryContainer.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[reset]]></code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/LinkGenerator/MezzioUrlGeneratorFactoryTest.php">
    <DeprecatedMethod>
      <code><![CDATA[withConsecutive]]></code>
      <code><![CDATA[withConsecutive]]></code>
      <code><![CDATA[withConsecutive]]></code>
      <code><![CDATA[withConsecutive]]></code>
      <code><![CDATA[withConsecutive]]></code>
      <code><![CDATA[withConsecutive]]></code>
    </DeprecatedMethod>
    <MixedArgument>
      <code><![CDATA[CustomUrlHelper::class]]></code>
    </MixedArgument>
    <UndefinedClass>
      <code><![CDATA[CustomUrlHelper]]></code>
      <code><![CDATA[CustomUrlHelper]]></code>
      <code><![CDATA[CustomUrlHelper]]></code>
    </UndefinedClass>
  </file>
  <file src="test/LinkGenerator/MezzioUrlGeneratorTest.php">
    <DeprecatedMethod>
      <code><![CDATA[withConsecutive]]></code>
    </DeprecatedMethod>
  </file>
  <file src="test/LinkGeneratorFactoryTest.php">
    <DeprecatedMethod>
      <code><![CDATA[assertAttributeSame]]></code>
      <code><![CDATA[self::assertAttributeSame($urlGenerator, 'urlGenerator', $instance)]]></code>
      <code><![CDATA[self::assertAttributeSame($urlGenerator, 'urlGenerator', $instance)]]></code>
    </DeprecatedMethod>
    <MixedArgument>
      <code><![CDATA[UrlGenerator::class]]></code>
    </MixedArgument>
    <UndefinedClass>
      <code><![CDATA[UrlGenerator]]></code>
      <code><![CDATA[UrlGenerator]]></code>
      <code><![CDATA[UrlGenerator]]></code>
      <code><![CDATA[UrlGenerator]]></code>
    </UndefinedClass>
  </file>
  <file src="test/LinkTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$uri]]></code>
    </ArgumentTypeCoercion>
    <MixedArgument>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$name]]></code>
      <code><![CDATA[$rel]]></code>
      <code><![CDATA[$rel]]></code>
      <code><![CDATA[$uri]]></code>
      <code><![CDATA[$value]]></code>
      <code><![CDATA[$value]]></code>
    </MixedArgument>
    <TooFewArguments>
      <code><![CDATA[new Link()]]></code>
    </TooFewArguments>
  </file>
  <file src="test/PHPUnitDeprecatedAssertions.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
      <code><![CDATA[$expected]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code><![CDATA[static::getObjectAttribute(
                $classOrObject,
                $attributeName
            )]]></code>
      <code><![CDATA[static::getStaticAttribute(
                $classOrObject,
                $attributeName
            )]]></code>
      <code><![CDATA[static::readAttribute($actualClassOrObject, $actualAttributeName)]]></code>
      <code><![CDATA[static::readAttribute($classOrObject, $attributeName)]]></code>
      <code><![CDATA[static::readAttribute($haystackClassOrObject, $haystackAttributeName)]]></code>
    </DeprecatedMethod>
    <DocblockTypeContradiction>
      <code><![CDATA[is_object($object)]]></code>
    </DocblockTypeContradiction>
    <InternalClass>
      <code><![CDATA[new Exception(
            sprintf(
                'Argument #%d%sof %s::%s() must be a %s',
                $argument,
                $value !== null ? ' (' . gettype($value) . '#' . $value . ')' : ' (No Value) ',
                (string) ($stack[1]['class'] ?? ''),
                (string) ($stack[1]['function'] ?? ''),
                $type
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Argument #%d%sof %s::%s() must be a %s',
                $argument,
                $value !== null ? ' (' . gettype($value) . '#' . $value . ')' : ' (No Value) ',
                (string) ($stack[1]['class'] ?? ''),
                (string) ($stack[1]['function'] ?? ''),
                $type
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Argument #%d%sof %s::%s() must be a %s',
                $argument,
                $value !== null ? ' (' . gettype($value) . '#' . $value . ')' : ' (No Value) ',
                (string) ($stack[1]['class'] ?? ''),
                (string) ($stack[1]['function'] ?? ''),
                $type
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Argument #%d%sof %s::%s() must be a %s',
                $argument,
                $value !== null ? ' (' . gettype($value) . '#' . $value . ')' : ' (No Value) ',
                (string) ($stack[1]['class'] ?? ''),
                (string) ($stack[1]['function'] ?? ''),
                $type
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Argument #%d%sof %s::%s() must be a %s',
                $argument,
                $value !== null ? ' (' . gettype($value) . '#' . $value . ')' : ' (No Value) ',
                (string) ($stack[1]['class'] ?? ''),
                (string) ($stack[1]['function'] ?? ''),
                $type
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Attribute "%s" not found in class.',
                $attributeName
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Attribute "%s" not found in class.',
                $attributeName
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Attribute "%s" not found in class.',
                $attributeName
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Attribute "%s" not found in class.',
                $attributeName
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Attribute "%s" not found in class.',
                $attributeName
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Attribute "%s" not found in object.',
                $attributeName
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Attribute "%s" not found in object.',
                $attributeName
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Attribute "%s" not found in object.',
                $attributeName
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Attribute "%s" not found in object.',
                $attributeName
            )
        )]]></code>
      <code><![CDATA[new Exception(
            sprintf(
                'Attribute "%s" not found in object.',
                $attributeName
            )
        )]]></code>
    </InternalClass>
    <MixedOperand>
      <code><![CDATA[$value]]></code>
    </MixedOperand>
    <PossiblyUnusedMethod>
      <code><![CDATA[assertAttributeEmpty]]></code>
      <code><![CDATA[assertAttributeEmpty]]></code>
      <code><![CDATA[assertAttributeEmpty]]></code>
      <code><![CDATA[assertAttributeEmpty]]></code>
      <code><![CDATA[assertAttributeEmpty]]></code>
    </PossiblyUnusedMethod>
    <RedundantCast>
      <code><![CDATA[(string) ($stack[1]['class'] ?? '')]]></code>
      <code><![CDATA[(string) ($stack[1]['function'] ?? '')]]></code>
    </RedundantCast>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_object($classOrObject)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/ResourceGenerator/DoctrinePaginatorTest.php">
    <DeprecatedMethod>
      <code><![CDATA[setMethods]]></code>
      <code><![CDATA[withConsecutive]]></code>
      <code><![CDATA[withConsecutive]]></code>
      <code><![CDATA[withConsecutive]]></code>
      <code><![CDATA[withConsecutive]]></code>
      <code><![CDATA[withConsecutive]]></code>
    </DeprecatedMethod>
  </file>
  <file src="test/ResourceGenerator/ExceptionTest.php">
    <PossiblyFalseOperand>
      <code><![CDATA[strrpos(ExceptionInterface::class, '\\')]]></code>
    </PossiblyFalseOperand>
  </file>
  <file src="test/ResourceGenerator/NestedCollectionResourceGenerationTest.php">
    <DeprecatedMethod>
      <code><![CDATA[assertInternalType]]></code>
      <code><![CDATA[assertInternalType]]></code>
    </DeprecatedMethod>
    <InvalidArgument>
      <code><![CDATA[$request]]></code>
    </InvalidArgument>
    <MixedAssignment>
      <code><![CDATA[$childCollection]]></code>
    </MixedAssignment>
  </file>
  <file src="test/ResourceGenerator/ResourceWithNestedInstancesTest.php">
    <InvalidArgument>
      <code><![CDATA[$request]]></code>
    </InvalidArgument>
  </file>
  <file src="test/ResourceGenerator/ResourceWithSelfReferringInstanceTest.php">
    <MixedArgument>
      <code><![CDATA[$hydrators->reveal()]]></code>
      <code><![CDATA[$linkGenerator->reveal()]]></code>
      <code><![CDATA[$metadataMap->reveal()]]></code>
    </MixedArgument>
    <PossiblyUndefinedMethod>
      <code><![CDATA[reveal]]></code>
      <code><![CDATA[reveal]]></code>
      <code><![CDATA[reveal]]></code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/ResourceGenerator/RouteBasedCollectionWithRouteParamsTest.php">
    <InvalidArgument>
      <code><![CDATA[$linkGenerator]]></code>
      <code><![CDATA[$linkGenerator]]></code>
      <code><![CDATA[$linkGenerator]]></code>
      <code><![CDATA[$linkGenerator]]></code>
      <code><![CDATA[$linkGenerator]]></code>
      <code><![CDATA[$linkGenerator]]></code>
      <code><![CDATA[$linkGenerator]]></code>
      <code><![CDATA[$request]]></code>
      <code><![CDATA[$request]]></code>
      <code><![CDATA[$request]]></code>
      <code><![CDATA[$request]]></code>
      <code><![CDATA[$request]]></code>
      <code><![CDATA[$request]]></code>
      <code><![CDATA[$request]]></code>
      <code><![CDATA[Argument::that(function (array $params) use ($i) {
                        return array_key_exists('foo_id', $params)
                            && array_key_exists('bar_id', $params)
                            && $params['foo_id'] === 1234
                            && $params['bar_id'] === $i;
                    })]]></code>
      <code><![CDATA[Argument::that(function (array $params) use ($page) {
                return array_key_exists('foo_id', $params)
                    && array_key_exists('p', $params)
                    && $params['foo_id'] === 1234
                    && $params['p'] === $page;
            })]]></code>
    </InvalidArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$request->reveal()]]></code>
      <code><![CDATA[$request->reveal()]]></code>
      <code><![CDATA[$this->createCollectionItems(
            $linkGenerator,
            $request
        )]]></code>
    </MixedArgumentTypeCoercion>
    <MixedMethodCall>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
    </MixedMethodCall>
  </file>
  <file src="test/ResourceGenerator/UrlBasedCollectionWithRouteParamsTest.php">
    <InvalidArgument>
      <code><![CDATA[$linkGenerator]]></code>
      <code><![CDATA[$request]]></code>
      <code><![CDATA[Argument::that(function (array $params) use ($i) {
                        return array_key_exists('foo_id', $params)
                            && array_key_exists('bar_id', $params)
                            && $params['foo_id'] === 1234
                            && $params['bar_id'] === $i;
                    })]]></code>
    </InvalidArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$request->reveal()]]></code>
      <code><![CDATA[$this->createCollectionItems($linkGenerator, $request)]]></code>
    </MixedArgumentTypeCoercion>
    <MixedMethodCall>
      <code><![CDATA[willReturn]]></code>
    </MixedMethodCall>
  </file>
  <file src="test/ResourceGeneratorFactoryTest.php">
    <DeprecatedMethod>
      <code><![CDATA[assertAttributeSame]]></code>
      <code><![CDATA[assertAttributeSame]]></code>
    </DeprecatedMethod>
    <MissingDependency>
      <code><![CDATA[HydratorPluginManager]]></code>
      <code><![CDATA[HydratorPluginManager]]></code>
    </MissingDependency>
    <MixedArgument>
      <code><![CDATA[$this->container->reveal()]]></code>
      <code><![CDATA[$this->container->reveal()]]></code>
      <code><![CDATA[$this->container->reveal()]]></code>
      <code><![CDATA[$this->container->reveal()]]></code>
      <code><![CDATA[CustomLinkGenerator::class]]></code>
    </MixedArgument>
    <MixedMethodCall>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
    </MixedMethodCall>
    <PossiblyInvalidMethodCall>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod>
      <code><![CDATA[reveal]]></code>
      <code><![CDATA[reveal]]></code>
      <code><![CDATA[reveal]]></code>
      <code><![CDATA[reveal]]></code>
    </PossiblyUndefinedMethod>
    <UndefinedClass>
      <code><![CDATA[CustomLinkGenerator]]></code>
      <code><![CDATA[CustomLinkGenerator]]></code>
      <code><![CDATA[CustomLinkGenerator]]></code>
      <code><![CDATA[CustomLinkGenerator]]></code>
    </UndefinedClass>
  </file>
  <file src="test/ResourceGeneratorTest.php">
    <DeprecatedMethod>
      <code><![CDATA[assertInternalType]]></code>
    </DeprecatedMethod>
    <InvalidArgument>
      <code><![CDATA[Argument::that(function (array $params) use ($i) {
                        return array_key_exists('foo_bar_id', $params)
                            && array_key_exists('test', $params)
                            && $params['foo_bar_id'] === $i
                            && $params['test'] === 'param';
                    })]]></code>
      <code><![CDATA[Argument::that(function (array $params) use ($i) {
                        return array_key_exists('foo_bar_id', $params)
                            && array_key_exists('test', $params)
                            && $params['foo_bar_id'] === $i
                            && $params['test'] === 'param';
                    })]]></code>
      <code><![CDATA[Argument::that(function (array $params) {
                    return array_key_exists('foo_bar_id', $params)
                        && array_key_exists('test', $params)
                        && $params['foo_bar_id'] === 'XXXX-YYYY-ZZZZ'
                        && $params['test'] === 'param';
                })]]></code>
      <code><![CDATA[Argument::type('array')]]></code>
      <code><![CDATA[Argument::type('array')]]></code>
      <code><![CDATA[Argument::type('array')]]></code>
      <code><![CDATA[Argument::type('array')]]></code>
      <code><![CDATA[Argument::type('array')]]></code>
      <code><![CDATA[Argument::type('array')]]></code>
      <code><![CDATA[Argument::type('array')]]></code>
      <code><![CDATA[Argument::type('array')]]></code>
      <code><![CDATA[Argument::type('array')]]></code>
      <code><![CDATA[Argument::type('array')]]></code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$embedded]]></code>
      <code><![CDATA[$item]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$embedded]]></code>
      <code><![CDATA[$ids[]]]></code>
      <code><![CDATA[$item]]></code>
    </MixedAssignment>
    <PossiblyUndefinedMethod>
      <code><![CDATA[shouldNotBeCalled]]></code>
      <code><![CDATA[shouldNotBeCalled]]></code>
      <code><![CDATA[shouldNotBeCalled]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
      <code><![CDATA[willReturn]]></code>
    </PossiblyUndefinedMethod>
    <PossiblyUnusedParam>
      <code><![CDATA[$strategy]]></code>
    </PossiblyUnusedParam>
    <TooFewArguments>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
      <code><![CDATA[fromRoute]]></code>
    </TooFewArguments>
    <UnsafeInstantiation>
      <code><![CDATA[new $metadata(
            TestAsset\FooBar::class,
            'foo-bar',
            '/api/foo'
        )]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="test/TestAsset/Child.php">
    <MissingPropertyType>
      <code><![CDATA[$id]]></code>
      <code><![CDATA[$message]]></code>
    </MissingPropertyType>
  </file>
  <file src="test/TestAsset/FooBar.php">
    <PossiblyUnusedProperty>
      <code><![CDATA[$bar]]></code>
      <code><![CDATA[$children]]></code>
      <code><![CDATA[$foo]]></code>
      <code><![CDATA[$id]]></code>
    </PossiblyUnusedProperty>
  </file>
  <file src="test/TestAsset/TestMetadataMapFactory.php">
    <PossiblyUnusedMethod>
      <code><![CDATA[createTestMetadata]]></code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedParam>
      <code><![CDATA[$metadata]]></code>
    </PossiblyUnusedParam>
  </file>
</files>
